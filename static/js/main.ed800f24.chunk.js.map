{"version":3,"sources":["baseurl.js","CreateNew.js","Lga.js","PollingUnit.js","App.js","index.js"],"names":["baseurl","CreateNew","useState","allLga","setAllLga","allWards","setWards","msg","setMsg","puName","setpuName","partyResults","setPartyResults","partyAbb","setPartyAbb","partyScore","setPartyScore","postLgaId","setPostLgaId","postWardId","setPostWardId","useEffect","Axios","get","then","response","data","ward_id","createNewUnit","trim","length","post","wardId","Number","lgaId","pollingUnitName","className","onSubmit","e","preventDefault","style","display","htmlFor","onChange","target","value","name","id","map","item","lga_id","lga_name","onClick","i","ward_name","type","abbr","score","isNaN","Lga","oneLga","setOneLga","setLgaId","idx","Object","keys","window","scrollTo","top","behavior","PollingUnit","allPollingUnits","setAllPollingUnits","onePollingUnit","setOnePollingUnit","unitId","setUnitId","rows","polling_unit_name","uniqueid","party_abbreviation","party_score","App","content","setContent","ReactDOM","render","document","getElementById"],"mappings":"kPAAaA,G,MAAU,qC,OCKR,SAASC,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAoCZ,mBAAS,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAkCd,mBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAAoChB,mBAAS,GAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KAkBAC,qBAAU,WACRC,IAAMC,IAAIvB,EAAU,OAAOwB,MAAK,SAACC,GAC/BrB,EAAUqB,EAASC,WAEpB,IAEHL,qBAAU,WACRC,IAAMC,IAAIvB,EAAO,eAAWiB,IAAaO,MAAK,SAACC,GAC7CnB,EAASmB,EAASC,MAClBN,EAAcK,EAASC,KAAK,GAAGC,cAEhC,CAACV,IAEJ,IAWMW,EAAgB,YAVS,IAAzBnB,EAAOoB,OAAOC,QAAwC,IAAxBnB,EAAamB,QAC7CtB,EACE,kIAEK,IAETA,EAAO,IACA,KAKLc,IAAMS,KAAK/B,EAAO,mBAAuB,CACvCgC,OAAQC,OAAOd,GACfe,MAAOD,OAAOhB,GACdkB,gBAAiB1B,EACjBE,aAAcA,IACba,MAAK,SAACC,GACPjB,EAAO,wCACPI,EAAgB,IAChBF,EAAU,QAKhB,OACE,uBACE0B,UAAU,eACVC,SAAU,SAACC,GACTA,EAAEC,kBAHN,UAME,qBAAKH,UAAU,QAAf,SACE,uDAEF,sBAAKA,UAAU,eAAf,UACE,qBACEA,UAAU,MACVI,MAAO,CAAEC,QAA+B,IAAtBlC,EAAIsB,OAAOC,OAAe,OAAS,SAFvD,SAIGvB,IAEH,sBAAK6B,UAAU,aAAf,UACE,uBAAOM,QAAQ,MAAf,qCACA,wBACEC,SAAU,SAACL,GAAD,OAAOpB,EAAaoB,EAAEM,OAAOC,QACvCC,KAAK,MACLC,GAAG,MACHX,UAAU,cAJZ,SAMGjC,EAAO6C,KAAI,SAACC,GAAD,OACV,wBAA0BJ,MAAOI,EAAKC,OAAtC,SACGD,EAAKE,UADKF,EAAKC,gBAMxB,sBAAKd,UAAU,cAAf,UACE,uBAAOM,QAAQ,OAAf,yBACA,wBACEU,QAAS,SAACd,GAAD,OAAOlB,EAAckB,EAAEM,OAAOC,QACvCC,KAAK,OACLV,UAAU,cACVW,GAAG,OAJL,SAMG1C,EAAS2C,KAAI,SAACC,EAAMI,GAAP,OACZ,wBAAgBR,MAAOI,EAAKtB,QAA5B,SACGsB,EAAKK,WADKD,WAMnB,sBAAKjB,UAAU,YAAf,UACE,sDACA,uBACEmB,KAAK,OACLV,MAAOpC,EACP2B,UAAU,cACVO,SAAU,SAACL,GAAD,OAAO5B,EAAU4B,EAAEM,OAAOC,aAGxC,sBAAKT,UAAU,YAAf,UACE,6CACCzB,EAAaqC,KAAI,SAACC,EAAMI,GAAP,OAChB,8BACE,+BAAOJ,EAAKO,OADd,IAC2B,+BAAOP,EAAKQ,UAD/BJ,SAKZ,sBAAKjB,UAAU,eAAf,UACE,gDACA,uBACEmB,KAAK,OACLV,MAAOhC,EACP8B,SAAU,SAACL,GACTxB,EAAYwB,EAAEM,OAAOC,aAI3B,sBAAKT,UAAU,eAAf,UACE,0CACA,uBACEmB,KAAK,OACLV,MAAO9B,EACP4B,SAAU,SAACL,GACTtB,EAAcsB,EAAEM,OAAOC,aAI7B,qBAAKT,UAAU,YAAf,SACE,wBAAQgB,QAAS,WA1IC,IAAtBrC,EAAWe,QACS,IAApBjB,EAASiB,QACTjB,EAASiB,OAAS,GAClB4B,MAAMzB,OAAOlB,MAGfH,EAAgB,GAAD,mBACVD,GADU,CAEb,CAAE6C,KAAM3C,EAAU4C,MAAOxB,OAAOlB,OAElCD,EAAY,IACZE,EAAc,MA+HR,4BAGJ,qBAAKoB,UAAU,SAAf,SACE,wBAAQgB,QAAS,kBAAMxB,KAAvB,yBC5JO,SAAS+B,IACtB,MAA4BzD,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAO0D,EAAP,KAAeC,EAAf,KACA,EAA0B3D,mBAAS,MAAnC,mBAAOgC,EAAP,KAAc4B,EAAd,KAQAzC,qBAAU,WACRC,IAAMC,IAAIvB,EAAU,OAAOwB,MAAK,SAACC,GAC/BrB,EAAUqB,EAASC,WAEpB,IAQH,OACE,sBAAKU,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,2DAEiB,IAAlBjC,EAAO2B,OACN,8CAEA3B,EAAO6C,KAAI,SAACC,GAAD,OACT,sBAAuBb,UAAU,YAAjC,UACE,oBAAGgB,QAAS,kBA5BEW,EA4BmBd,EAAKC,YA3B9C5B,IAAMC,IAAIvB,EAAO,4BAAwB+D,IAAOvC,MAAK,SAACC,GACpDoC,EAAUpC,EAASC,MACnBoC,EAASC,MAHU,IAACA,GA4Bd,UACGd,EAAKE,SADR,IACkB,oDAElB,qBACEf,UAAU,WACVI,MAAO,CACLC,QAASP,IAAUe,EAAKC,OAAS,QAAU,QAH/C,SAMkC,IAA/Bc,OAAOC,KAAKL,GAAQ9B,OACnBkC,OAAOC,KAAKL,GAAQZ,KAAI,SAACC,EAAMI,GAAP,OACtB,8BACE,+BAAOJ,IADT,IACsB,+BAAOW,EAAOX,OAD5BI,MAKV,qBAAKjB,UAAU,UAAf,yBAjBIa,EAAKC,WAuBnB,wBAAQd,UAAU,SAASgB,QAAS,WAtCtCc,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,YAoCV,mBCvDS,SAASC,IACtB,MAA8CpE,mBAAS,IAAvD,mBAAOqE,EAAP,KAAwBC,EAAxB,KAEA,EAA4CtE,mBAAS,IAArD,mBAAOuE,EAAP,KAAuBC,EAAvB,KACA,EAA4BxE,mBAAS,MAArC,mBAAOyE,EAAP,KAAeC,EAAf,KAWAvD,qBAAU,WACRC,IAAMC,IAAIvB,EAAU,iBAAiBwB,MAAK,SAACC,GACzC+C,EAAmB/C,EAASC,KAAKmD,WAElC,IASH,OACE,sBAAKzC,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,uDAE0B,IAA3BmC,EAAgBzC,OACf,8CAEAyC,EAAgBvB,KAAI,SAACC,GAAD,OACS,OAA3BA,EAAK6B,mBACW,IADyB7B,EAAK6B,kBAAkBjD,OAC3DC,OAD6B,KAEhC,sBAAyBM,UAAU,YAAnC,UACE,oBAAGgB,QAAS,kBAlCJW,EAkCqBd,EAAK8B,cAjC5CzD,IAAMC,IAAIvB,EAAO,qCAAiC+D,IAAOvC,MACvD,SAACC,GACCiD,EAAkBjD,EAASC,MAC3BkD,EAAUb,MAJG,IAACA,GAkCR,UACGd,EAAK6B,kBACN,oDAEF,qBACE1C,UAAU,WACVI,MAAO,CACLC,QAASkC,IAAW1B,EAAK8B,SAAW,QAAU,QAHlD,SAM0C,IAAvCf,OAAOC,KAAKQ,GAAgB3C,OAC3B,qBAAKM,UAAU,UAAf,qBAEAqC,EAAezB,KAAI,SAACC,EAAMI,GAAP,OACjB,8BACE,+BAAOJ,EAAK+B,qBAA2B,IACvC,+BAAO/B,EAAKgC,gBAFN5B,UAfNJ,EAAK8B,aA0BrB,wBAAQ3C,UAAU,SAASgB,QAAS,WA3CtCc,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,YAyCV,mBC7CSa,MAlBf,WACE,MAA8BhF,mBAAS,cAACoE,EAAD,KAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,OACE,sBAAKhD,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,wBAAQgB,QAAS,kBAAMgC,EAAW,cAACd,EAAD,MAAlC,iCAGA,wBAAQlB,QAAS,kBAAMgC,EAAW,cAACzB,EAAD,MAAlC,qCACA,wBAAQP,QAAS,kBAAMgC,EAAW,cAAC,EAAD,MAAlC,oCAIF,qBAAKhD,UAAU,UAAf,SAA0B+C,QCdhCE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ed800f24.chunk.js","sourcesContent":["export const baseurl = \"https://learntnode.herokuapp.com/\";\n\n//local\n// export const baseurl = \"http://localhost:4000/\";\n\n","import { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport \"./CreateNew.css\";\nimport { baseurl } from \"./baseurl\";\n\nexport default function CreateNew() {\n  const [allLga, setAllLga] = useState([]);\n  const [allWards, setWards] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [puName, setpuName] = useState(\"\");\n  const [partyResults, setPartyResults] = useState([]);\n  const [partyAbb, setPartyAbb] = useState(\"\");\n  const [partyScore, setPartyScore] = useState(\"\");\n  const [postLgaId, setPostLgaId] = useState(1);\n  const [postWardId, setPostWardId] = useState(1);\n\n  const savePary = () => {\n    if (\n      partyScore.length === 0 ||\n      partyAbb.length === 0 ||\n      partyAbb.length > 4 ||\n      isNaN(Number(partyScore))\n    )\n      return;\n    setPartyResults([\n      ...partyResults,\n      { abbr: partyAbb, score: Number(partyScore) },\n    ]);\n    setPartyAbb(\"\");\n    setPartyScore(\"\");\n  };\n\n  useEffect(() => {\n    Axios.get(baseurl + \"lga\").then((response) => {\n      setAllLga(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    Axios.get(baseurl + `ward/${postLgaId}`).then((response) => {\n      setWards(response.data);\n      setPostWardId(response.data[0].ward_id);\n    });\n  }, [postLgaId]);\n\n  const validInputs = () => {\n    if (puName.trim().length === 0 || partyResults.length === 0) {\n      setMsg(\n        \"Invalid Input. Please enter valid values in all text box. Note that party abbrevition should contain a maximum of 4 characters\"\n      );\n      return false;\n    }\n    setMsg(\"\");\n    return true;\n  };\n\n  const createNewUnit = () => {\n    if (validInputs()) {\n      Axios.post(baseurl + `new_polling_unit`, {\n        wardId: Number(postWardId),\n        lgaId: Number(postLgaId),\n        pollingUnitName: puName,\n        partyResults: partyResults,\n      }).then((response) => {\n        setMsg(\"New Polling Unit added Successfully!\");\n        setPartyResults([]);\n        setpuName(\"\");\n      });\n    }\n  };\n\n  return (\n    <form\n      className=\"main-content\"\n      onSubmit={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <div className=\"title\">\n        <h3>create polling unit</h3>\n      </div>\n      <div className=\"form-content\">\n        <div\n          className=\"msg\"\n          style={{ display: msg.trim().length === 0 ? \"none\" : \"block\" }}\n        >\n          {msg}\n        </div>\n        <div className=\"select-lga\">\n          <label htmlFor=\"lga\">Select Local Government</label>\n          <select\n            onChange={(e) => setPostLgaId(e.target.value)}\n            name=\"lga\"\n            id=\"lga\"\n            className=\"first-three\"\n          >\n            {allLga.map((item) => (\n              <option key={item.lga_id} value={item.lga_id}>\n                {item.lga_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"select-ward\">\n          <label htmlFor=\"ward\">Select Ward</label>\n          <select\n            onClick={(e) => setPostWardId(e.target.value)}\n            name=\"ward\"\n            className=\"first-three\"\n            id=\"ward\"\n          >\n            {allWards.map((item, i) => (\n              <option key={i} value={item.ward_id}>\n                {item.ward_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"unit-name\">\n          <label>Polling unit name</label>\n          <input\n            type=\"text\"\n            value={puName}\n            className=\"first-three\"\n            onChange={(e) => setpuName(e.target.value)}\n          />\n        </div>\n        <div className=\"party-box\">\n          <label>Parties:</label>\n          {partyResults.map((item, i) => (\n            <p key={i}>\n              <span>{item.abbr}</span> <span>{item.score}</span>\n            </p>\n          ))}\n        </div>\n        <div className=\"party-detail\">\n          <label>abbrevition</label>\n          <input\n            type=\"text\"\n            value={partyAbb}\n            onChange={(e) => {\n              setPartyAbb(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"party-detail\">\n          <label>score</label>\n          <input\n            type=\"text\"\n            value={partyScore}\n            onChange={(e) => {\n              setPartyScore(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"add-party\">\n          <button onClick={() => savePary()}>add party</button>\n        </div>\n      </div>\n      <div className=\"submit\">\n        <button onClick={() => createNewUnit()}>Create</button>\n      </div>\n    </form>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { baseurl } from \"./baseurl\";\nimport Axios from \"axios\";\n\nexport default function Lga() {\n  const [allLga, setAllLga] = useState([]);\n  const [oneLga, setOneLga] = useState([]);\n  const [lgaId, setLgaId] = useState(null);\n\n  const getTotalResult = (idx) => {\n    Axios.get(baseurl + `lga/polling_units/${idx}`).then((response) => {\n      setOneLga(response.data);\n      setLgaId(idx);\n    });\n  };\n  useEffect(() => {\n    Axios.get(baseurl + \"lga\").then((response) => {\n      setAllLga(response.data);\n    });\n  }, []);\n  const scroll = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"title\">\n        <h3>local government Result</h3>\n      </div>\n      {allLga.length === 0 ? (\n        <span>Loading...</span>\n      ) : (\n        allLga.map((item) => (\n          <div key={item.lga_id} className=\"list-item\">\n            <p onClick={() => getTotalResult(item.lga_id)}>\n              {item.lga_name} <button>view result</button>\n            </p>\n            <div\n              className=\"sub-list\"\n              style={{\n                display: lgaId === item.lga_id ? \"block\" : \"none\",\n              }}\n            >\n              {Object.keys(oneLga).length !== 0 ? (\n                Object.keys(oneLga).map((item, i) => (\n                  <p key={i}>\n                    <span>{item}</span> <span>{oneLga[item]}</span>\n                  </p>\n                ))\n              ) : (\n                <div className=\"no-data\">No data</div>\n              )}\n            </div>\n          </div>\n        ))\n      )}\n      <button className=\"scroll\" onClick={() => scroll()}>\n        Up\n      </button>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { baseurl } from \"./baseurl\";\n\nexport default function PollingUnit() {\n  const [allPollingUnits, setAllPollingUnits] = useState([]);\n\n  const [onePollingUnit, setOnePollingUnit] = useState([]);\n  const [unitId, setUnitId] = useState(null);\n\n  const getParties = (idx) => {\n    Axios.get(baseurl + `polling_units/polling_unit/${idx}`).then(\n      (response) => {\n        setOnePollingUnit(response.data);\n        setUnitId(idx);\n      }\n    );\n  };\n\n  useEffect(() => {\n    Axios.get(baseurl + \"polling_units\").then((response) => {\n      setAllPollingUnits(response.data.rows);\n    });\n  }, []);\n\n  const scroll = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"title\">\n        <h3>Polling Unit Result</h3>\n      </div>\n      {allPollingUnits.length === 0 ? (\n        <span>Loading...</span>\n      ) : (\n        allPollingUnits.map((item) =>\n          item.polling_unit_name === null ? null : item.polling_unit_name.trim()\n              .length === 0 ? null : (\n            <div key={item.uniqueid} className=\"list-item\">\n              <p onClick={() => getParties(item.uniqueid)}>\n                {item.polling_unit_name}\n                <button>view result</button>\n              </p>\n              <div\n                className=\"sub-list\"\n                style={{\n                  display: unitId === item.uniqueid ? \"block\" : \"none\",\n                }}\n              >\n                {Object.keys(onePollingUnit).length === 0 ? (\n                  <div className=\"no-data\">No data</div>\n                ) : (\n                  onePollingUnit.map((item, i) => (\n                    <p key={i}>\n                      <span>{item.party_abbreviation}</span>{\" \"}\n                      <span>{item.party_score}</span>\n                    </p>\n                  ))\n                )}\n              </div>\n            </div>\n          )\n        )\n      )}\n      <button className=\"scroll\" onClick={() => scroll()}>Up</button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport CreateNew from \"./CreateNew\";\nimport Lga from \"./Lga\";\nimport PollingUnit from \"./PollingUnit\";\n\nfunction App() {\n  const [content, setContent] = useState(<PollingUnit />);\n  return (\n    <div className=\"container\">\n      <div className=\"nav\">\n        <button onClick={() => setContent(<PollingUnit />)}>\n          polling unit result\n        </button>\n        <button onClick={() => setContent(<Lga />)}>local government result</button>\n        <button onClick={() => setContent(<CreateNew />)}>\n          create polling unit\n        </button>\n      </div>\n      <div className=\"content\">{content}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}